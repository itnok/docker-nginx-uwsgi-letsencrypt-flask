#
# This is a base config for HTTPs.  To work, you have to replace "YOURDOMAIN" with your domain
#

upstream flask {
    server unix:/home/flask/app.sock;
}

# HTTP Config
server {
    listen 80 default_server;
    listen [::]:80;
    server_name YOURDOMAIN;

    location ^~ /.well-known/acme-challenge/ {
        allow all;
        default_type "text/plain";
        root /var/www/html;
    }

    # Hide /acme-challenge subdirectory and return 404 on all requests.
    # It is somewhat more secure than letting Nginx return 403.
    # Ending slash is important!
    location = /.well-known/acme-challenge/ {
        return 404;
    }

    return 301 https://$host$request_uri;
}

# HTTPS Config
server {
    client_max_body_size 16M;

    listen 443 ssl http2 default_server deferred;
    listen [::]:443 ssl http2 default_server deferred;

    server_name YOURDOMAIN;

    ssl_certificate /etc/letsencrypt/live/YOURDOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOURDOMAIN/privkey.pem;

    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # Enable server-side protection against BEAST attacks
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_ecdh_curve secp384r1;

    # Disable SSLv3
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    # Diffie-Hellman parameter for DHE ciphersuites
    # $ sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
    ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Enable HSTS (https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security)
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";

    # Enable OCSP stapling (http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox)
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/YOURDOMAIN/fullchain.pem;
    resolver 1.1.1.1 8.8.8.8 208.67.222.222 valid=300s;
    resolver_timeout 5s;

    error_log /var/log/nginx/error.log error;

    location / {
        uwsgi_pass  flask;
        include     /home/flask/conf/uwsgi_params;
    }
}

